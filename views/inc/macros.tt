[%

  # tabbed_layout
  #
  # Create a tabbed layout using Bootstrap navigation and panels.
  #
  # template variables used:
  #
  #   page_title    # general title to go at the top of the page

  #   page_content  # an array of page items in the form
  #   { name => 'Name to put in the tab', name_lc => 'anchor_name' }

  #   template_debug_view   # (optional) if present, the template content and
  #                         # template variables will be displayed

  MACRO tabbed_layout BLOCK;

    IF template_debug_view;

      IF template_content;
        page_content.push({
          name    => 'Template View: ' _ template.name,
          name_lc => 'tmpl_view',
          rendered_content => '<pre>' _ template_content _ '</pre>',
        });
      END;

      IF tmpl_vars;
        page_content.push({
          name    => 'Template variables',
          name_lc => 'tmpl_vars',
          rendered_content => '<pre>' _ tmpl_vars _ '</pre>',
        });
      END;

    END; # end template_debug_view

%]
  <div class="panel panel-default">
    <h1>
      [% page_title %]
    </h1>
[%
    IF page_content.size == 1;
%]
    <div class="tab-content">
[%  PROCESS page_item_content page_item = page_content.0; %]
    </div>
[%
    ELSE;
    # tabbed layout for pages with more than one item
%]
    <ul class="nav nav-tabs" role="tablist" id="navigation">
[%    first = 1;
      FOR page_item IN page_content;
        PROCESS nav_item
          item = page_item
          is_first_item = first;
        first = 0;
      END; %]
    </ul>
    <div class="tab-content">
[%    first = 1;
      FOR page_item IN page_content;
        panel_class = 'fade';
        IF first == 1;
            panel_class = 'fade in active';
        END;
        WRAPPER tab_pane
          item = page_item;

        PROCESS page_item_content
          page_item = page_item;

        END; # end WRAPPER
        first = 0;
      END; %]
    </div>
  </div>
[%  END;
  END; # tabbed_layout



  # page_item_content
  #
  # render the content of a piece of page

  BLOCK page_item_content;

    IF page_item.content;
      IF page_item.content == 'table';
        PROCESS 'views/inc/table.tt' data_table = page_item.table_config;
      ELSIF page_item.content == 'image';
        PROCESS image config = page_item.config;
      END;
    ELSIF page_item.rendered_content;
      page_item.rendered_content;

    ELSIF content;
      content;
    ELSE;
      '<p>Warning: no tab content specified.</p>';
    END;

  END; # page_item_content



  # tab_pane
  #
  # panel suitable for use with nav_item to create a tabbed interface
  # see tabbed_layout to combine the two items

  BLOCK tab_pane;

%]
    <div class="tab-pane [% panel_class %]" role="tabpanel" id="[% item.name_lc %]" aria-labelledby="[% item.name_lc %]-tab">
[%  content %]
    </div>
[%
  END; # tab_pane



  # nav_item
  #
  # creates a single navigation control, suitable for a tabbed interface
  # see tabbed_layout to create the full layout

  BLOCK nav_item;

      selected = 'false';
      IF is_first_item == 1;
          selected = 'true';
      END;
%]
    <li class="nav-item">
        <a class="nav-link" data-toggle="tab" role="tab"
        href="#[% item.name_lc %]" id="[% item.name_lc %]-tab"
        aria-controls="[% item.name_lc %]" aria-selected="[% selected %]">[% item.name %]</a>
    </li>
[%
  END; # nav_item



  # image
  #
  # display an image with an optional caption
  #
  # template variables used:
  #   image_config object with keys
  #
  #     img_src: "/path/to/image.jpg",
  #     img_alt: "text describing the image"
  #     caption: '<p>This is a caption</p>'  # rendered HTML containing the caption

  BLOCK image;

%]
    <div class="panel panel-default">
    <img src="[% config.img_src %]" class="img-responsive" alt="[% config.img_alt %]">
[%
    IF config.caption;
      config.caption;
    END;
%]
    </div>
[%
  END; # end image
%]
